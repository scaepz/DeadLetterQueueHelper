@using Azure.Messaging.ServiceBus
@using System.Text
@using System.Security.Cryptography

<tr class="message">
    <td class="expansion-cell">
        <button @onclick=ToggleExpand>Expand</button>
    </td>
    <td>
        @Message.Subject
    </td>
    <td class="Id">
        <div>@Message.Id</div>
    </td>
    <td>
        @Message.FirstEnqueuedTime
    </td>
    <td>
        @Message.DeadLetterReason
    </td>
    <td>
        @Message.Attempts.Count attempts
    </td>
    <td>
        <button>Resubmit</button>
    </td>
</tr>
@if (IsExpanded)
{
    <tr>
        <th class="visually-hidden"></th>
        <th colspan="3">
            Body
        </th>
        <th>Dead letter reason</th>
        <th>Enqueued</th>
        <th>Sequence number</th>
    </tr>
    @foreach (var attempt in Message.Attempts)
    {
        <tr>
            <td class="visually-hidden"></td>
            <td colspan="3">
                <pre>@attempt.Body</pre>
            </td>
            <td>@attempt.DeadLetterReason</td>
            <td>@attempt.EnqueuedTime</td>
            <td>@attempt.SequenceNumber</td>
        </tr>
    }
}

@code {
    private bool IsExpanded = false;

    private int _attemptIndex = 0;

    [Parameter]
    public IntegrationMessage Message { get; set; } = null!;

    [Inject]
    IntegrationMessageService Service { get; set; } = null!;

    private bool HasEarlierAttempt => _attemptIndex > 0;

    private bool HasLaterAttempt => _attemptIndex < Message.Attempts.Count - 1;

    private ServiceBusReceivedMessage? SelectedAttempt => Message.Attempts.ElementAtOrDefault(_attemptIndex);

    async Task Resubmit()
    {
        if (SelectedAttempt == null)
        {
            return;
        }
        await Service.Resubmit(SelectedAttempt);
    }

    void ToggleExpand()
    {
        IsExpanded = !IsExpanded;
    }

}
